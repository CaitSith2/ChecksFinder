<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.canclick = true
global.clicked = false
scr_updateobtains()
won = false
for (var yy = 0;yy&lt;global.tileheight;yy++)
{
    for (var xx = 0;xx&lt;global.tilewidth;xx++)
    {
        global.tiletype[xx,yy] = "none"
    }
}
room_width = global.tilewidth*16
room_height = global.tileheight*16
global.roomthisheight = global.tileheight
global.roomthiswidth = global.tilewidth
view_wview[0] = room_width
view_hview[0] = room_height*1.25
bombcount = 0
while (bombcount &lt; global.bombcount &amp;&amp; bombcount &lt; (global.tilewidth*global.tileheight)/5)
{
    var xx = irandom_range(0,global.tilewidth-1)
    var yy = irandom_range(0,global.tileheight-1)
    while (global.tiletype[xx,yy] != "none")
    {
        xx = irandom_range(0,global.tilewidth-1)
        yy = irandom_range(0,global.tileheight-1)
    }
    global.tiletype[xx,yy] = "bomb"
    bombcount++
}
checkcount = 0
var amt = 20-5+10-5+10-5
var checksavail = undefined
var iie = 0
for (var i = 0; i &lt; array_length_1d(global.spotlist);i++)
{
    if (i &lt; global.tilewidth+global.tileheight+global.bombcount-5-5)
    {
        if (global.spotlist[i] == 0 &amp;&amp; !file_exists("send"+string(i+81000)))
        {
            checksavail[iie] = i
            iie++
        }
        else
        {
            global.spotlist[i] = 1
        }
    }
}
while (checkcount &lt; 1 &amp;&amp; checkcount &lt; array_length_1d(checksavail))
{
    var xx = irandom_range(0,global.tilewidth-1)
    var yy = irandom_range(0,global.tileheight-1)
    while (global.tiletype[xx,yy] != "none")
    {
        xx = irandom_range(0,global.tilewidth-1)
        yy = irandom_range(0,global.tileheight-1)
    }
    global.tiletype[xx,yy] = "check"
    checkcount++
}
for (var yy = 0;yy&lt;global.tileheight;yy++)
{
    for (var xx = 0;xx&lt;global.tilewidth;xx++)
    {
        with instance_create(xx*16,yy*16,obj_tile)
        {
            type = global.tiletype[xx,yy]
            if (global.tiletype[xx,yy] == "check")
            {
                var chose = irandom_range(0,array_length_1d(checksavail)-1)
                typeplus = checksavail[chose]
                var templst = undefined
                for (var ea = 0; ea &lt; chose;ea++)
                {
                    templst[ea] = checksavail[ea]
                }
                for (var ea = chose; ea &lt; array_length_1d(checksavail)-1;ea++)
                {
                    templst[ea] = checksavail[ea+1]
                }
                checksavail = templst
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var bombcount = 0
with (obj_tile)
{
    if (type == "bomb")
    {
        bombcount++
    }
}
if (won == true || ((global.roomthiswidth) &gt;= 10 &amp;&amp; (global.roomthisheight) &gt;= 10 &amp;&amp; bombcount &gt;= ((global.roomthiswidth)*(global.roomthisheight))/5))
{
    won = true
    audio_play_sound(snd_digright,0,false)
    var done = false
    for (var yy = 0;yy&lt;global.tileheight;yy++)
    {
        for (var xx = 0;xx&lt;global.tilewidth;xx++)
        {
            if (done == false)
            {
                with (instance_position(xx*16,yy*16,obj_tile))
                {
                    if (type == "none")
                    {
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 2
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 2
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 2
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 3
                        }
                    }
                    if (type == "bomb")
                    {
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 4
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 4
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 4
                        }
                        with instance_create(x+8,y+8,obj_piece)
                        {
                            image_index = 5
                        }
                    }
                    instance_destroy(self)
                    done = true
                }
            }
        }
    }
    if (done == true)
    {
        alarm[0] = 2
    }
    else
    {
        file_text_close(file_text_open_write("victory"))
        room_goto(rm_win)
    }
}
else
{
    room_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ended = true
with (obj_tile)
{
    if (type != "bomb" &amp;&amp; revealed == false)
    {
        ended = false
    }
}
if (global.canclick == true &amp;&amp; ended == true &amp;&amp; alarm[0] &lt;= 0)
{
    alarm[0] = 30
    audio_play_sound(snd_win,0,false)
    with(obj_tile)
    {
        revealed = true
    }
}
scr_updateobtains()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cnt = 0
for (var i = 0; i &lt; array_length_1d(global.spotlist);i++)
{
    if (i &lt; global.tilewidth+global.tileheight+global.bombcount-5-5)
    {
        if (global.spotlist[i] == 0 &amp;&amp; !file_exists("send"+string(i+81000)))
        {
            cnt++
        }
    }
}
draw_set_halign(fa_left)
draw_sprite_ext(spr_tiles,3,8,view_hport[0]-150,3,3,0,c_white,1)
draw_set_font(fnt_main)
draw_text(60,view_hport[0]-170,string(cnt))
draw_sprite_ext(spr_tiles,4,8,view_hport[0]-100,3,3,0,c_white,1)
draw_set_font(fnt_main)
draw_text(60,view_hport[0]-120,string(global.tilewidth)+"/10")
draw_sprite_ext(spr_tiles,5,8+240,view_hport[0]-100,3,3,0,c_white,1)
draw_set_font(fnt_main)
draw_text(60+240,view_hport[0]-120,string(global.tileheight)+"/10")
draw_sprite_ext(spr_tiles,6,8+240,view_hport[0]-150,3,3,0,c_white,1)
draw_set_font(fnt_main)
draw_text(60+240,view_hport[0]-170,string(global.bombcount)+"/20")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//with (obj_tile)
//{
//    revealed = true
//    if (type == "check")
//    {
//        global.spotlist[typeplus] = 1
//        scr_senditem(typeplus+81000)
//        global.checksgotten++
//    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
